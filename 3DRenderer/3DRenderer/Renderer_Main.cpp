#include <cstring>
#include <iostream>
#include <stack>
#include <vector>
#include <time.h>
#include "Backtracker.h"
#include "Renderer_3D.h"
#include "Renderer_2D.h"
#include "MatrixMxN.h"
#include "FragmentShaders.h"

#ifdef _WIN32
#include <conio.h>
#include <Windows.h>
#endif
#include <queue>
#include "VertexShader.h"

#define N 4

#define M 5

using namespace std;

bool Tri_Comp(Triangle t, vector<Triangle> ts) {
	for (int i = 0; i < ts.size(); i++) {
		if (ts[i].v1.x == t.v1.x && ts[i].v1.y == t.v1.y
			&& ts[i].v2.x == t.v2.x && ts[i].v2.y == t.v2.y
			&& ts[i].v3.x == t.v3.x && ts[i].v3.y == t.v3.y) {
			return true;
		}
	}

	return false;
}

void Rasterize_ST() {
	//SetConsoleTitle(LPCWSTR(string("Using software D3D renderer")));

	//while(GameLoop());
	//Demo_2D();

	vector<float> positions = { 1, 1, -1, -1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, 1, 1, 1, 1, -1, 1, 1, 1, 1, -1, 1, 1, 1, -1, 1, -1, 1, 1, -1, -1, 1, -1, -1, 1, -1, 1, 1, -1, 1, -1, -1, -1, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, -1, -1, -1, -1, 1, -1, 1, 1, -1, -1, -1, -1, 1, 1, -1, 1, -1, -1 }; //[-1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, -1, -1, -1, 1, -1, -1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, -1, 1, -1, 1, 1, -1]//[-1,-1,-1, -1,-1, 1, -1, 1, 1,   1, 1,-1, -1,-1,-1, -1, 1,-1,   1,-1, 1, -1,-1,-1, 1,-1,-1,   1, 1,-1, 1,-1,-1, -1,-1,-1, -1,-1,-1, -1, 1, 1, -1, 1,-1, 1,-1, 1, -1,-1, 1, -1,-1,-1, -1, 1, 1, -1,-1, 1, 1,-1, 1, 1, 1, 1, 1,-1,-1, 1, 1,-1, 1,-1,-1, 1, 1, 1, 1,-1, 1, 1, 1, 1, 1, 1,-1, -1, 1,-1, 1, 1, 1, -1, 1,-1, -1, 1, 1, 1, 1, 1, -1, 1, 1, 1,-1, 1};
	vector<float> test_pos = { 0.338895, 0.188425, 0.338895, 0.338895, 0.188425, -0.338895, 0.338895, 2.777286, -0.338895, 0.338895, 0.188425, 0.338895, 0.338895, 2.777286, -0.338895, 0.338895, 2.777286, 0.338895, 1, -1, 1, 0.338895, 0.188425, 0.338895, -0.338895, 0.188425, 0.338895, 1, -1, 1, -0.338895, 0.188425, 0.338895, -1, -1, 1, -1, -1, 1, -0.338895, 0.188425, 0.338895, -0.338895, 0.188425, -0.338895, -1, -1, 1, -0.338895, 0.188425, -0.338895, -1, -1, -1, -1, -1, -1, 1, -1, -1, 0.549299, -1.583461, -0.549299, -1, -1, -1, 0.549299, -1.583461, -0.549299, -0.549299, -1.583461, -0.549299, 1, -1, -1, 0.338895, 0.188425, -0.338895, 0.338895, 0.188425, 0.338895, 1, -1, -1, 0.338895, 0.188425, 0.338895, 1, -1, 1, -1, -1, -1, -0.338895, 0.188425, -0.338895, 0.338895, 0.188425, -0.338895, -1, -1, -1, 0.338895, 0.188425, -0.338895, 1, -1, -1, -0.338895, 2.777286, -0.338895, -0.338895, 2.777286, 0.338895, -0.169716, 2.777286, 0.169716, -0.338895, 2.777286, -0.338895, -0.169716, 2.777286, 0.169716, -0.169716, 2.777286, -0.169716, 0.338895, 0.188425, -0.338895, -0.338895, 0.188425, -0.338895, -0.338895, 2.777286, -0.338895, 0.338895, 0.188425, -0.338895, -0.338895, 2.777286, -0.338895, 0.338895, 2.777286, -0.338895, -0.338895, 0.188425, 0.338895, 0.338895, 0.188425, 0.338895, 0.338895, 2.777286, 0.338895, -0.338895, 0.188425, 0.338895, 0.338895, 2.777286, 0.338895, -0.338895, 2.777286, 0.338895, -0.338895, 0.188425, -0.338895, -0.338895, 0.188425, 0.338895, -0.338895, 2.777286, 0.338895, -0.338895, 0.188425, -0.338895, -0.338895, 2.777286, 0.338895, -0.338895, 2.777286, -0.338895, 0.169716, 3.288299, -0.169716, -0.169716, 3.288299, -0.169716, -0.169716, 3.799312, -0.169716, 0.169716, 3.288299, -0.169716, -0.169716, 3.799312, -0.169716, 0.169716, 3.799312, -0.169716, -0.338895, 2.777286, 0.338895, 0.338895, 2.777286, 0.338895, 0.169716, 2.777286, 0.169716, -0.338895, 2.777286, 0.338895, 0.169716, 2.777286, 0.169716, -0.169716, 2.777286, 0.169716, 0.338895, 2.777286, -0.338895, -0.338895, 2.777286, -0.338895, -0.169716, 2.777286, -0.169716, 0.338895, 2.777286, -0.338895, -0.169716, 2.777286, -0.169716, 0.169716, 2.777286, -0.169716, 0.338895, 2.777286, 0.338895, 0.338895, 2.777286, -0.338895, 0.169716, 2.777286, -0.169716, 0.338895, 2.777286, 0.338895, 0.169716, 2.777286, -0.169716, 0.169716, 2.777286, 0.169716, 0.169716, 3.799312, 0.169716, 0.169716, 3.799312, -0.169716, 0.169716, 6.133103, -0.169716, 0.169716, 3.799312, 0.169716, 0.169716, 6.133103, -0.169716, 0.169716, 6.133103, 0.169716, 0.169716, 3.799312, -0.169716, 0.169716, 3.799312, 0.169716, 2.855141, 3.799312, 0.169716, 0.169716, 3.799312, -0.169716, 2.855141, 3.799312, 0.169716, 2.855141, 3.799312, -0.169716, -0.169716, 3.288299, -0.169716, -0.169716, 3.288299, 0.169716, -0.169716, 3.799312, 0.169716, -0.169716, 3.288299, -0.169716, -0.169716, 3.799312, 0.169716, -0.169716, 3.799312, -0.169716, -0.169716, 3.288299, 0.169716, 0.169716, 3.288299, 0.169716, 0.169716, 3.288299, 3.672321, -0.169716, 3.288299, 0.169716, 0.169716, 3.288299, 3.672321, -0.169716, 3.288299, 3.672321, -0.169716, 2.777286, 0.169716, 0.169716, 2.777286, 0.169716, 0.169716, 3.288299, 0.169716, -0.169716, 2.777286, 0.169716, 0.169716, 3.288299, 0.169716, -0.169716, 3.288299, 0.169716, -0.169716, 2.777286, -0.169716, -0.169716, 2.777286, 0.169716, -0.169716, 3.288299, 0.169716, -0.169716, 2.777286, -0.169716, -0.169716, 3.288299, 0.169716, -0.169716, 3.288299, -0.169716, 0.169716, 2.777286, 0.169716, 0.169716, 2.777286, -0.169716, 0.169716, 3.288299, -0.169716, 0.169716, 2.777286, 0.169716, 0.169716, 3.288299, -0.169716, 0.169716, 3.288299, 0.169716, 0.169716, 2.777286, -0.169716, -0.169716, 2.777286, -0.169716, -0.169716, 3.288299, -0.169716, 0.169716, 2.777286, -0.169716, -0.169716, 3.288299, -0.169716, 0.169716, 3.288299, -0.169716, 2.855141, 3.288299, 0.169716, 2.855141, 3.288299, -0.169716, 3.302497, 3.121528, -0.28049, 2.855141, 3.288299, 0.169716, 3.302497, 3.121528, -0.28049, 3.302497, 3.121528, 0.28049, 0.169716, 3.799312, 0.169716, 0.169716, 3.288299, 0.169716, 2.855141, 3.288299, 0.169716, 0.169716, 3.799312, 0.169716, 2.855141, 3.288299, 0.169716, 2.855141, 3.799312, 0.169716, 0.169716, 3.288299, -0.169716, 0.169716, 3.799312, -0.169716, 2.855141, 3.799312, -0.169716, 0.169716, 3.288299, -0.169716, 2.855141, 3.799312, -0.169716, 2.855141, 3.288299, -0.169716, 0.169716, 3.288299, 0.169716, 0.169716, 3.288299, -0.169716, 2.855141, 3.288299, -0.169716, 0.169716, 3.288299, 0.169716, 2.855141, 3.288299, -0.169716, 2.855141, 3.288299, 0.169716, 0.169716, 3.288299, 3.672321, 0.169716, 3.799312, 3.672321, 0.246526, 3.914951, 3.873332, 0.169716, 3.288299, 3.672321, 0.246526, 3.914951, 3.873332, 0.246526, 3.17266, 3.873332, 0.169716, 3.288299, 0.169716, 0.169716, 3.799312, 0.169716, 0.169716, 3.799312, 3.672321, 0.169716, 3.288299, 0.169716, 0.169716, 3.799312, 3.672321, 0.169716, 3.288299, 3.672321, 0.169716, 3.799312, 0.169716, -0.169716, 3.799312, 0.169716, -0.169716, 3.799312, 3.672321, 0.169716, 3.799312, 0.169716, -0.169716, 3.799312, 3.672321, 0.169716, 3.799312, 3.672321, -0.169716, 3.799312, 0.169716, -0.169716, 3.288299, 0.169716, -0.169716, 3.288299, 3.672321, -0.169716, 3.799312, 0.169716, -0.169716, 3.288299, 3.672321, -0.169716, 3.799312, 3.672321, -0.169716, 6.133103, -0.169716, -0.169716, 6.133103, 0.169716, -0.37321, 6.376593, 0.37321, -0.169716, 6.133103, -0.169716, -0.37321, 6.376593, 0.37321, -0.37321, 6.376593, -0.37321, -0.169716, 3.799312, -0.169716, -0.169716, 3.799312, 0.169716, -0.169716, 6.133103, 0.169716, -0.169716, 3.799312, -0.169716, -0.169716, 6.133103, 0.169716, -0.169716, 6.133103, -0.169716, -0.169716, 3.799312, 0.169716, 0.169716, 3.799312, 0.169716, 0.169716, 6.133103, 0.169716, -0.169716, 3.799312, 0.169716, 0.169716, 6.133103, 0.169716, -0.169716, 6.133103, 0.169716, 0.169716, 3.799312, -0.169716, -0.169716, 3.799312, -0.169716, -0.169716, 6.133103, -0.169716, 0.169716, 3.799312, -0.169716, -0.169716, 6.133103, -0.169716, 0.169716, 6.133103, -0.169716, 0.37321, 6.376593, -0.37321, -0.37321, 6.376593, -0.37321, -0.103801, 6.938471, -0.103801, 0.37321, 6.376593, -0.37321, -0.103801, 6.938471, -0.103801, 0.103801, 6.938471, -0.103801, -0.169716, 6.133103, 0.169716, 0.169716, 6.133103, 0.169716, 0.37321, 6.376593, 0.37321, -0.169716, 6.133103, 0.169716, 0.37321, 6.376593, 0.37321, -0.37321, 6.376593, 0.37321, 0.169716, 6.133103, -0.169716, -0.169716, 6.133103, -0.169716, -0.37321, 6.376593, -0.37321, 0.169716, 6.133103, -0.169716, -0.37321, 6.376593, -0.37321, 0.37321, 6.376593, -0.37321, 0.169716, 6.133103, 0.169716, 0.169716, 6.133103, -0.169716, 0.37321, 6.376593, -0.37321, 0.169716, 6.133103, 0.169716, 0.37321, 6.376593, -0.37321, 0.37321, 6.376593, 0.37321, 0.103801, 6.938471, -0.103801, -0.103801, 6.938471, -0.103801, -0.103801, 6.938471, 0.103801, 0.103801, 6.938471, -0.103801, -0.103801, 6.938471, 0.103801, 0.103801, 6.938471, 0.103801, 0.37321, 6.376593, 0.37321, 0.37321, 6.376593, -0.37321, 0.103801, 6.938471, -0.103801, 0.37321, 6.376593, 0.37321, 0.103801, 6.938471, -0.103801, 0.103801, 6.938471, 0.103801, -0.37321, 6.376593, -0.37321, -0.37321, 6.376593, 0.37321, -0.103801, 6.938471, 0.103801, -0.37321, 6.376593, -0.37321, -0.103801, 6.938471, 0.103801, -0.103801, 6.938471, -0.103801, -0.37321, 6.376593, 0.37321, 0.37321, 6.376593, 0.37321, 0.103801, 6.938471, 0.103801, -0.37321, 6.376593, 0.37321, 0.103801, 6.938471, 0.103801, -0.103801, 6.938471, 0.103801, 0.246526, 3.914951, 3.873332, -0.246526, 3.914951, 3.873332, -0.042408, 3.607651, 4.63741, 0.246526, 3.914951, 3.873332, -0.042408, 3.607651, 4.63741, 0.042408, 3.607651, 4.63741, 0.169716, 3.799312, 3.672321, -0.169716, 3.799312, 3.672321, -0.246526, 3.914951, 3.873332, 0.169716, 3.799312, 3.672321, -0.246526, 3.914951, 3.873332, 0.246526, 3.914951, 3.873332, -0.169716, 3.288299, 3.672321, 0.169716, 3.288299, 3.672321, 0.246526, 3.17266, 3.873332, -0.169716, 3.288299, 3.672321, 0.246526, 3.17266, 3.873332, -0.246526, 3.17266, 3.873332, -0.169716, 3.799312, 3.672321, -0.169716, 3.288299, 3.672321, -0.246526, 3.17266, 3.873332, -0.169716, 3.799312, 3.672321, -0.246526, 3.17266, 3.873332, -0.246526, 3.914951, 3.873332, -0.042408, 3.47996, 4.63741, 0.042408, 3.47996, 4.63741, 0.042408, 3.607651, 4.63741, -0.042408, 3.47996, 4.63741, 0.042408, 3.607651, 4.63741, -0.042408, 3.607651, 4.63741, -0.246526, 3.17266, 3.873332, 0.246526, 3.17266, 3.873332, 0.042408, 3.47996, 4.63741, -0.246526, 3.17266, 3.873332, 0.042408, 3.47996, 4.63741, -0.042408, 3.47996, 4.63741, -0.246526, 3.914951, 3.873332, -0.246526, 3.17266, 3.873332, -0.042408, 3.47996, 4.63741, -0.246526, 3.914951, 3.873332, -0.042408, 3.47996, 4.63741, -0.042408, 3.607651, 4.63741, 0.246526, 3.17266, 3.873332, 0.246526, 3.914951, 3.873332, 0.042408, 3.607651, 4.63741, 0.246526, 3.17266, 3.873332, 0.042408, 3.607651, 4.63741, 0.042408, 3.47996, 4.63741, 3.302497, 3.966084, 0.28049, 3.302497, 3.121528, 0.28049, 5.085871, 3.401694, 0.094395, 3.302497, 3.966084, 0.28049, 5.085871, 3.401694, 0.094395, 5.085871, 3.685917, 0.094395, 2.855141, 3.288299, -0.169716, 2.855141, 3.799312, -0.169716, 3.302497, 3.966084, -0.28049, 2.855141, 3.288299, -0.169716, 3.302497, 3.966084, -0.28049, 3.302497, 3.121528, -0.28049, 2.855141, 3.799312, 0.169716, 2.855141, 3.288299, 0.169716, 3.302497, 3.121528, 0.28049, 2.855141, 3.799312, 0.169716, 3.302497, 3.121528, 0.28049, 3.302497, 3.966084, 0.28049, 2.855141, 3.799312, -0.169716, 2.855141, 3.799312, 0.169716, 3.302497, 3.966084, 0.28049, 2.855141, 3.799312, -0.169716, 3.302497, 3.966084, 0.28049, 3.302497, 3.966084, -0.28049, 5.085871, 3.401694, 0.094395, 5.085871, 3.401694, -0.094395, 5.085871, 3.685917, -0.094395, 5.085871, 3.401694, 0.094395, 5.085871, 3.685917, -0.094395, 5.085871, 3.685917, 0.094395, 3.302497, 3.966084, -0.28049, 3.302497, 3.966084, 0.28049, 5.085871, 3.685917, 0.094395, 3.302497, 3.966084, -0.28049, 5.085871, 3.685917, 0.094395, 5.085871, 3.685917, -0.094395, 3.302497, 3.121528, 0.28049, 3.302497, 3.121528, -0.28049, 5.085871, 3.401694, -0.094395, 3.302497, 3.121528, 0.28049, 5.085871, 3.401694, -0.094395, 5.085871, 3.401694, 0.094395, 3.302497, 3.121528, -0.28049, 3.302497, 3.966084, -0.28049, 5.085871, 3.685917, -0.094395, 3.302497, 3.121528, -0.28049, 5.085871, 3.685917, -0.094395, 5.085871, 3.401694, -0.094395, -0.549299, -1.583461, -0.549299, 0.549299, -1.583461, -0.549299, 0.549299, -1.583461, 0.549299, -0.549299, -1.583461, -0.549299, 0.549299, -1.583461, 0.549299, -0.549299, -1.583461, 0.549299, 1, -1, 1, -1, -1, 1, -0.549299, -1.583461, 0.549299, 1, -1, 1, -0.549299, -1.583461, 0.549299, 0.549299, -1.583461, 0.549299, -1, -1, 1, -1, -1, -1, -0.549299, -1.583461, -0.549299, -1, -1, 1, -0.549299, -1.583461, -0.549299, -0.549299, -1.583461, 0.549299, 1, -1, -1, 1, -1, 1, 0.549299, -1.583461, 0.549299, 1, -1, -1, 0.549299, -1.583461, 0.549299, 0.549299, -1.583461, -0.549299 };
	vector<float> normals = { 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1 };
	vector<float> test_norms = { 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0.4861, 0.8739, 0, 0.4861, 0.8739, 0, 0.4861, 0.8739, 0, 0.4861, 0.8739, 0, 0.4861, 0.8739, 0, 0.4861, 0.8739, -0.8739, 0.4861, 0, -0.8739, 0.4861, 0, -0.8739, 0.4861, 0, -0.8739, 0.4861, 0, -0.8739, 0.4861, 0, -0.8739, 0.4861, 0, 0, -0.6113, -0.7914, 0, -0.6113, -0.7914, 0, -0.6113, -0.7914, 0, -0.6113, -0.7914, 0, -0.6113, -0.7914, 0, -0.6113, -0.7914, 0.8739, 0.4861, 0, 0.8739, 0.4861, 0, 0.8739, 0.4861, 0, 0.8739, 0.4861, 0, 0.8739, 0.4861, 0, 0.8739, 0.4861, 0, 0, 0.4861, -0.8739, 0, 0.4861, -0.8739, 0, 0.4861, -0.8739, 0, 0.4861, -0.8739, 0, 0.4861, -0.8739, 0, 0.4861, -0.8739, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, -0.3493, -0.937, 0, -0.3493, -0.937, 0, -0.3493, -0.937, 0, -0.3493, -0.937, 0, -0.3493, -0.937, 0, -0.3493, -0.937, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0.9341, 0, -0.3569, 0.9341, 0, -0.3569, 0.9341, 0, -0.3569, 0.9341, 0, -0.3569, 0.9341, 0, -0.3569, 0.9341, 0, -0.3569, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -0.7673, -0.6413, 0, -0.7673, -0.6413, 0, -0.7673, -0.6413, 0, -0.7673, -0.6413, 0, -0.7673, -0.6413, 0, -0.7673, -0.6413, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0.4323, -0.9017, 0, 0.4323, -0.9017, 0, 0.4323, -0.9017, 0, 0.4323, -0.9017, 0, 0.4323, -0.9017, 0, 0.4323, -0.9017, 0, -0.6413, 0.7673, 0, -0.6413, 0.7673, 0, -0.6413, 0.7673, 0, -0.6413, 0.7673, 0, -0.6413, 0.7673, 0, -0.6413, 0.7673, 0, -0.6413, -0.7673, 0, -0.6413, -0.7673, 0, -0.6413, -0.7673, 0, -0.6413, -0.7673, 0, -0.6413, -0.7673, 0, -0.6413, -0.7673, 0.7673, -0.6413, 0, 0.7673, -0.6413, 0, 0.7673, -0.6413, 0, 0.7673, -0.6413, 0, 0.7673, -0.6413, 0, 0.7673, -0.6413, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.9017, 0.4323, 0, 0.9017, 0.4323, 0, 0.9017, 0.4323, 0, 0.9017, 0.4323, 0, 0.9017, 0.4323, 0, 0.9017, 0.4323, 0, -0.9017, 0.4323, 0, -0.9017, 0.4323, 0, -0.9017, 0.4323, 0, -0.9017, 0.4323, 0, -0.9017, 0.4323, 0, -0.9017, 0.4323, 0, 0, 0.4323, 0.9017, 0, 0.4323, 0.9017, 0, 0.4323, 0.9017, 0, 0.4323, 0.9017, 0, 0.4323, 0.9017, 0, 0.4323, 0.9017, 0, 0.9278, 0.3731, 0, 0.9278, 0.3731, 0, 0.9278, 0.3731, 0, 0.9278, 0.3731, 0, 0.9278, 0.3731, 0, 0.9278, 0.3731, 0, 0.8668, -0.4987, 0, 0.8668, -0.4987, 0, 0.8668, -0.4987, 0, 0.8668, -0.4987, 0, 0.8668, -0.4987, 0, 0.8668, -0.4987, 0, -0.8668, -0.4987, 0, -0.8668, -0.4987, 0, -0.8668, -0.4987, 0, -0.8668, -0.4987, 0, -0.8668, -0.4987, 0, -0.8668, -0.4987, -0.9341, 0, -0.3569, -0.9341, 0, -0.3569, -0.9341, 0, -0.3569, -0.9341, 0, -0.3569, -0.9341, 0, -0.3569, -0.9341, 0, -0.3569, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -0.9278, 0.3731, 0, -0.9278, 0.3731, 0, -0.9278, 0.3731, 0, -0.9278, 0.3731, 0, -0.9278, 0.3731, 0, -0.9278, 0.3731, -0.9661, 0, 0.2581, -0.9661, 0, 0.2581, -0.9661, 0, 0.2581, -0.9661, 0, 0.2581, -0.9661, 0, 0.2581, -0.9661, 0, 0.2581, 0.9661, 0, 0.2581, 0.9661, 0, 0.2581, 0.9661, 0, 0.2581, 0.9661, 0, 0.2581, 0.9661, 0, 0.2581, 0.9661, 0, 0.2581, 0.1038, 0, 0.9946, 0.1038, 0, 0.9946, 0.1038, 0, 0.9946, 0.1038, 0, 0.9946, 0.1038, 0, 0.9946, 0.1038, 0, 0.9946, -0.2404, 0, -0.9707, -0.2404, 0, -0.9707, -0.2404, 0, -0.9707, -0.2404, 0, -0.9707, -0.2404, 0, -0.9707, -0.2404, 0, -0.9707, -0.2404, 0, 0.9707, -0.2404, 0, 0.9707, -0.2404, 0, 0.9707, -0.2404, 0, 0.9707, -0.2404, 0, 0.9707, -0.2404, 0, 0.9707, -0.3493, 0.937, 0, -0.3493, 0.937, 0, -0.3493, 0.937, 0, -0.3493, 0.937, 0, -0.3493, 0.937, 0, -0.3493, 0.937, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0.1552, 0.9879, 0, 0.1552, 0.9879, 0, 0.1552, 0.9879, 0, 0.1552, 0.9879, 0, 0.1552, 0.9879, 0, 0.1552, 0.9879, 0, 0.1552, -0.9879, 0, 0.1552, -0.9879, 0, 0.1552, -0.9879, 0, 0.1552, -0.9879, 0, 0.1552, -0.9879, 0, 0.1552, -0.9879, 0, 0.1038, 0, -0.9946, 0.1038, 0, -0.9946, 0.1038, 0, -0.9946, 0.1038, 0, -0.9946, 0.1038, 0, -0.9946, 0.1038, 0, -0.9946, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -0.6113, 0.7914, 0, -0.6113, 0.7914, 0, -0.6113, 0.7914, 0, -0.6113, 0.7914, 0, -0.6113, 0.7914, 0, -0.6113, 0.7914, -0.7914, -0.6113, 0, -0.7914, -0.6113, 0, -0.7914, -0.6113, 0, -0.7914, -0.6113, 0, -0.7914, -0.6113, 0, -0.7914, -0.6113, 0, 0.7914, -0.6113, 0, 0.7914, -0.6113, 0, 0.7914, -0.6113, 0, 0.7914, -0.6113, 0, 0.7914, -0.6113, 0, 0.7914, -0.6113, 0 };
	vector<float> uvCoords = {};
	vector<float> uv_test = {};

	time_t t = time(NULL);

	Mesh m(test_pos, test_norms, uvCoords);
	Mesh m2(positions, normals, uvCoords);
	Transform tf;
	tf.xScale = 50;
	tf.yScale = 50;
	tf.zScale = 50;
	tf.xPos = 300;
	tf.yPos = 300;
	tf.zPos = 0;

	Transform tf2;
	tf2.xScale = 30;
	tf2.yScale = 30;
	tf2.zScale = 30;
	tf2.xPos = 100;
	tf2.yPos = 300;
	tf2.zPos = 0;

	int frames = 0;
	int tframe = 0;
	int cfps = 0;
	priority_queue<Triangle> tris;

	char c = 0;
	while (true) {
		tf.yRot -= 1;
		tf.xRot -= 1;
		tf2.zRot++;
		tf2.xRot++;
		bitmap_image img("dvd.bmp");
		float tst[] = { 0,0 };
		Texture_Setup(&img, tst);

		ProjectMesh(m, tf, tris, FragShader_BS);
		ProjectMesh(m2, tf2, tris, FragShader_Text, tst);
		Rasterizer(tris, 1); // Apply interlacing to improve rendering speed (2-3x)

		string s = " " + std::to_string(cfps) + " FPS" + " Frames rendered: " + std::to_string(frames++);
		tframe++;
		wstring r = std::wstring(s.begin(), s.end());
		LPCWSTR wideString = r.c_str();
		SetConsoleTitle(wideString);

		time_t c = time(NULL) - t;
		if (c >= 1) {
			t = time(NULL);
			cfps = tframe;
			tframe = 0;
		}
	}
}

void Rasterize_MT() {
	//SetConsoleTitle(LPCWSTR(string("Using software D3D renderer")));

	//while(GameLoop());
	//Demo_2D();

	vector<float> positions = { 1, 1, -1, -1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, 1, 1, 1, 1, -1, 1, 1, 1, 1, -1, 1, 1, 1, -1, 1, -1, 1, 1, -1, -1, 1, -1, -1, 1, -1, 1, 1, -1, 1, -1, -1, -1, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, -1, -1, -1, -1, 1, -1, 1, 1, -1, -1, -1, -1, 1, 1, -1, 1, -1, -1 }; //[-1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, -1, -1, -1, 1, -1, -1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, -1, 1, -1, 1, 1, -1]//[-1,-1,-1, -1,-1, 1, -1, 1, 1,   1, 1,-1, -1,-1,-1, -1, 1,-1,   1,-1, 1, -1,-1,-1, 1,-1,-1,   1, 1,-1, 1,-1,-1, -1,-1,-1, -1,-1,-1, -1, 1, 1, -1, 1,-1, 1,-1, 1, -1,-1, 1, -1,-1,-1, -1, 1, 1, -1,-1, 1, 1,-1, 1, 1, 1, 1, 1,-1,-1, 1, 1,-1, 1,-1,-1, 1, 1, 1, 1,-1, 1, 1, 1, 1, 1, 1,-1, -1, 1,-1, 1, 1, 1, -1, 1,-1, -1, 1, 1, 1, 1, 1, -1, 1, 1, 1,-1, 1};
	vector<float> test_pos = { 0.338895, 0.188425, 0.338895, 0.338895, 0.188425, -0.338895, 0.338895, 2.777286, -0.338895, 0.338895, 0.188425, 0.338895, 0.338895, 2.777286, -0.338895, 0.338895, 2.777286, 0.338895, 1, -1, 1, 0.338895, 0.188425, 0.338895, -0.338895, 0.188425, 0.338895, 1, -1, 1, -0.338895, 0.188425, 0.338895, -1, -1, 1, -1, -1, 1, -0.338895, 0.188425, 0.338895, -0.338895, 0.188425, -0.338895, -1, -1, 1, -0.338895, 0.188425, -0.338895, -1, -1, -1, -1, -1, -1, 1, -1, -1, 0.549299, -1.583461, -0.549299, -1, -1, -1, 0.549299, -1.583461, -0.549299, -0.549299, -1.583461, -0.549299, 1, -1, -1, 0.338895, 0.188425, -0.338895, 0.338895, 0.188425, 0.338895, 1, -1, -1, 0.338895, 0.188425, 0.338895, 1, -1, 1, -1, -1, -1, -0.338895, 0.188425, -0.338895, 0.338895, 0.188425, -0.338895, -1, -1, -1, 0.338895, 0.188425, -0.338895, 1, -1, -1, -0.338895, 2.777286, -0.338895, -0.338895, 2.777286, 0.338895, -0.169716, 2.777286, 0.169716, -0.338895, 2.777286, -0.338895, -0.169716, 2.777286, 0.169716, -0.169716, 2.777286, -0.169716, 0.338895, 0.188425, -0.338895, -0.338895, 0.188425, -0.338895, -0.338895, 2.777286, -0.338895, 0.338895, 0.188425, -0.338895, -0.338895, 2.777286, -0.338895, 0.338895, 2.777286, -0.338895, -0.338895, 0.188425, 0.338895, 0.338895, 0.188425, 0.338895, 0.338895, 2.777286, 0.338895, -0.338895, 0.188425, 0.338895, 0.338895, 2.777286, 0.338895, -0.338895, 2.777286, 0.338895, -0.338895, 0.188425, -0.338895, -0.338895, 0.188425, 0.338895, -0.338895, 2.777286, 0.338895, -0.338895, 0.188425, -0.338895, -0.338895, 2.777286, 0.338895, -0.338895, 2.777286, -0.338895, 0.169716, 3.288299, -0.169716, -0.169716, 3.288299, -0.169716, -0.169716, 3.799312, -0.169716, 0.169716, 3.288299, -0.169716, -0.169716, 3.799312, -0.169716, 0.169716, 3.799312, -0.169716, -0.338895, 2.777286, 0.338895, 0.338895, 2.777286, 0.338895, 0.169716, 2.777286, 0.169716, -0.338895, 2.777286, 0.338895, 0.169716, 2.777286, 0.169716, -0.169716, 2.777286, 0.169716, 0.338895, 2.777286, -0.338895, -0.338895, 2.777286, -0.338895, -0.169716, 2.777286, -0.169716, 0.338895, 2.777286, -0.338895, -0.169716, 2.777286, -0.169716, 0.169716, 2.777286, -0.169716, 0.338895, 2.777286, 0.338895, 0.338895, 2.777286, -0.338895, 0.169716, 2.777286, -0.169716, 0.338895, 2.777286, 0.338895, 0.169716, 2.777286, -0.169716, 0.169716, 2.777286, 0.169716, 0.169716, 3.799312, 0.169716, 0.169716, 3.799312, -0.169716, 0.169716, 6.133103, -0.169716, 0.169716, 3.799312, 0.169716, 0.169716, 6.133103, -0.169716, 0.169716, 6.133103, 0.169716, 0.169716, 3.799312, -0.169716, 0.169716, 3.799312, 0.169716, 2.855141, 3.799312, 0.169716, 0.169716, 3.799312, -0.169716, 2.855141, 3.799312, 0.169716, 2.855141, 3.799312, -0.169716, -0.169716, 3.288299, -0.169716, -0.169716, 3.288299, 0.169716, -0.169716, 3.799312, 0.169716, -0.169716, 3.288299, -0.169716, -0.169716, 3.799312, 0.169716, -0.169716, 3.799312, -0.169716, -0.169716, 3.288299, 0.169716, 0.169716, 3.288299, 0.169716, 0.169716, 3.288299, 3.672321, -0.169716, 3.288299, 0.169716, 0.169716, 3.288299, 3.672321, -0.169716, 3.288299, 3.672321, -0.169716, 2.777286, 0.169716, 0.169716, 2.777286, 0.169716, 0.169716, 3.288299, 0.169716, -0.169716, 2.777286, 0.169716, 0.169716, 3.288299, 0.169716, -0.169716, 3.288299, 0.169716, -0.169716, 2.777286, -0.169716, -0.169716, 2.777286, 0.169716, -0.169716, 3.288299, 0.169716, -0.169716, 2.777286, -0.169716, -0.169716, 3.288299, 0.169716, -0.169716, 3.288299, -0.169716, 0.169716, 2.777286, 0.169716, 0.169716, 2.777286, -0.169716, 0.169716, 3.288299, -0.169716, 0.169716, 2.777286, 0.169716, 0.169716, 3.288299, -0.169716, 0.169716, 3.288299, 0.169716, 0.169716, 2.777286, -0.169716, -0.169716, 2.777286, -0.169716, -0.169716, 3.288299, -0.169716, 0.169716, 2.777286, -0.169716, -0.169716, 3.288299, -0.169716, 0.169716, 3.288299, -0.169716, 2.855141, 3.288299, 0.169716, 2.855141, 3.288299, -0.169716, 3.302497, 3.121528, -0.28049, 2.855141, 3.288299, 0.169716, 3.302497, 3.121528, -0.28049, 3.302497, 3.121528, 0.28049, 0.169716, 3.799312, 0.169716, 0.169716, 3.288299, 0.169716, 2.855141, 3.288299, 0.169716, 0.169716, 3.799312, 0.169716, 2.855141, 3.288299, 0.169716, 2.855141, 3.799312, 0.169716, 0.169716, 3.288299, -0.169716, 0.169716, 3.799312, -0.169716, 2.855141, 3.799312, -0.169716, 0.169716, 3.288299, -0.169716, 2.855141, 3.799312, -0.169716, 2.855141, 3.288299, -0.169716, 0.169716, 3.288299, 0.169716, 0.169716, 3.288299, -0.169716, 2.855141, 3.288299, -0.169716, 0.169716, 3.288299, 0.169716, 2.855141, 3.288299, -0.169716, 2.855141, 3.288299, 0.169716, 0.169716, 3.288299, 3.672321, 0.169716, 3.799312, 3.672321, 0.246526, 3.914951, 3.873332, 0.169716, 3.288299, 3.672321, 0.246526, 3.914951, 3.873332, 0.246526, 3.17266, 3.873332, 0.169716, 3.288299, 0.169716, 0.169716, 3.799312, 0.169716, 0.169716, 3.799312, 3.672321, 0.169716, 3.288299, 0.169716, 0.169716, 3.799312, 3.672321, 0.169716, 3.288299, 3.672321, 0.169716, 3.799312, 0.169716, -0.169716, 3.799312, 0.169716, -0.169716, 3.799312, 3.672321, 0.169716, 3.799312, 0.169716, -0.169716, 3.799312, 3.672321, 0.169716, 3.799312, 3.672321, -0.169716, 3.799312, 0.169716, -0.169716, 3.288299, 0.169716, -0.169716, 3.288299, 3.672321, -0.169716, 3.799312, 0.169716, -0.169716, 3.288299, 3.672321, -0.169716, 3.799312, 3.672321, -0.169716, 6.133103, -0.169716, -0.169716, 6.133103, 0.169716, -0.37321, 6.376593, 0.37321, -0.169716, 6.133103, -0.169716, -0.37321, 6.376593, 0.37321, -0.37321, 6.376593, -0.37321, -0.169716, 3.799312, -0.169716, -0.169716, 3.799312, 0.169716, -0.169716, 6.133103, 0.169716, -0.169716, 3.799312, -0.169716, -0.169716, 6.133103, 0.169716, -0.169716, 6.133103, -0.169716, -0.169716, 3.799312, 0.169716, 0.169716, 3.799312, 0.169716, 0.169716, 6.133103, 0.169716, -0.169716, 3.799312, 0.169716, 0.169716, 6.133103, 0.169716, -0.169716, 6.133103, 0.169716, 0.169716, 3.799312, -0.169716, -0.169716, 3.799312, -0.169716, -0.169716, 6.133103, -0.169716, 0.169716, 3.799312, -0.169716, -0.169716, 6.133103, -0.169716, 0.169716, 6.133103, -0.169716, 0.37321, 6.376593, -0.37321, -0.37321, 6.376593, -0.37321, -0.103801, 6.938471, -0.103801, 0.37321, 6.376593, -0.37321, -0.103801, 6.938471, -0.103801, 0.103801, 6.938471, -0.103801, -0.169716, 6.133103, 0.169716, 0.169716, 6.133103, 0.169716, 0.37321, 6.376593, 0.37321, -0.169716, 6.133103, 0.169716, 0.37321, 6.376593, 0.37321, -0.37321, 6.376593, 0.37321, 0.169716, 6.133103, -0.169716, -0.169716, 6.133103, -0.169716, -0.37321, 6.376593, -0.37321, 0.169716, 6.133103, -0.169716, -0.37321, 6.376593, -0.37321, 0.37321, 6.376593, -0.37321, 0.169716, 6.133103, 0.169716, 0.169716, 6.133103, -0.169716, 0.37321, 6.376593, -0.37321, 0.169716, 6.133103, 0.169716, 0.37321, 6.376593, -0.37321, 0.37321, 6.376593, 0.37321, 0.103801, 6.938471, -0.103801, -0.103801, 6.938471, -0.103801, -0.103801, 6.938471, 0.103801, 0.103801, 6.938471, -0.103801, -0.103801, 6.938471, 0.103801, 0.103801, 6.938471, 0.103801, 0.37321, 6.376593, 0.37321, 0.37321, 6.376593, -0.37321, 0.103801, 6.938471, -0.103801, 0.37321, 6.376593, 0.37321, 0.103801, 6.938471, -0.103801, 0.103801, 6.938471, 0.103801, -0.37321, 6.376593, -0.37321, -0.37321, 6.376593, 0.37321, -0.103801, 6.938471, 0.103801, -0.37321, 6.376593, -0.37321, -0.103801, 6.938471, 0.103801, -0.103801, 6.938471, -0.103801, -0.37321, 6.376593, 0.37321, 0.37321, 6.376593, 0.37321, 0.103801, 6.938471, 0.103801, -0.37321, 6.376593, 0.37321, 0.103801, 6.938471, 0.103801, -0.103801, 6.938471, 0.103801, 0.246526, 3.914951, 3.873332, -0.246526, 3.914951, 3.873332, -0.042408, 3.607651, 4.63741, 0.246526, 3.914951, 3.873332, -0.042408, 3.607651, 4.63741, 0.042408, 3.607651, 4.63741, 0.169716, 3.799312, 3.672321, -0.169716, 3.799312, 3.672321, -0.246526, 3.914951, 3.873332, 0.169716, 3.799312, 3.672321, -0.246526, 3.914951, 3.873332, 0.246526, 3.914951, 3.873332, -0.169716, 3.288299, 3.672321, 0.169716, 3.288299, 3.672321, 0.246526, 3.17266, 3.873332, -0.169716, 3.288299, 3.672321, 0.246526, 3.17266, 3.873332, -0.246526, 3.17266, 3.873332, -0.169716, 3.799312, 3.672321, -0.169716, 3.288299, 3.672321, -0.246526, 3.17266, 3.873332, -0.169716, 3.799312, 3.672321, -0.246526, 3.17266, 3.873332, -0.246526, 3.914951, 3.873332, -0.042408, 3.47996, 4.63741, 0.042408, 3.47996, 4.63741, 0.042408, 3.607651, 4.63741, -0.042408, 3.47996, 4.63741, 0.042408, 3.607651, 4.63741, -0.042408, 3.607651, 4.63741, -0.246526, 3.17266, 3.873332, 0.246526, 3.17266, 3.873332, 0.042408, 3.47996, 4.63741, -0.246526, 3.17266, 3.873332, 0.042408, 3.47996, 4.63741, -0.042408, 3.47996, 4.63741, -0.246526, 3.914951, 3.873332, -0.246526, 3.17266, 3.873332, -0.042408, 3.47996, 4.63741, -0.246526, 3.914951, 3.873332, -0.042408, 3.47996, 4.63741, -0.042408, 3.607651, 4.63741, 0.246526, 3.17266, 3.873332, 0.246526, 3.914951, 3.873332, 0.042408, 3.607651, 4.63741, 0.246526, 3.17266, 3.873332, 0.042408, 3.607651, 4.63741, 0.042408, 3.47996, 4.63741, 3.302497, 3.966084, 0.28049, 3.302497, 3.121528, 0.28049, 5.085871, 3.401694, 0.094395, 3.302497, 3.966084, 0.28049, 5.085871, 3.401694, 0.094395, 5.085871, 3.685917, 0.094395, 2.855141, 3.288299, -0.169716, 2.855141, 3.799312, -0.169716, 3.302497, 3.966084, -0.28049, 2.855141, 3.288299, -0.169716, 3.302497, 3.966084, -0.28049, 3.302497, 3.121528, -0.28049, 2.855141, 3.799312, 0.169716, 2.855141, 3.288299, 0.169716, 3.302497, 3.121528, 0.28049, 2.855141, 3.799312, 0.169716, 3.302497, 3.121528, 0.28049, 3.302497, 3.966084, 0.28049, 2.855141, 3.799312, -0.169716, 2.855141, 3.799312, 0.169716, 3.302497, 3.966084, 0.28049, 2.855141, 3.799312, -0.169716, 3.302497, 3.966084, 0.28049, 3.302497, 3.966084, -0.28049, 5.085871, 3.401694, 0.094395, 5.085871, 3.401694, -0.094395, 5.085871, 3.685917, -0.094395, 5.085871, 3.401694, 0.094395, 5.085871, 3.685917, -0.094395, 5.085871, 3.685917, 0.094395, 3.302497, 3.966084, -0.28049, 3.302497, 3.966084, 0.28049, 5.085871, 3.685917, 0.094395, 3.302497, 3.966084, -0.28049, 5.085871, 3.685917, 0.094395, 5.085871, 3.685917, -0.094395, 3.302497, 3.121528, 0.28049, 3.302497, 3.121528, -0.28049, 5.085871, 3.401694, -0.094395, 3.302497, 3.121528, 0.28049, 5.085871, 3.401694, -0.094395, 5.085871, 3.401694, 0.094395, 3.302497, 3.121528, -0.28049, 3.302497, 3.966084, -0.28049, 5.085871, 3.685917, -0.094395, 3.302497, 3.121528, -0.28049, 5.085871, 3.685917, -0.094395, 5.085871, 3.401694, -0.094395, -0.549299, -1.583461, -0.549299, 0.549299, -1.583461, -0.549299, 0.549299, -1.583461, 0.549299, -0.549299, -1.583461, -0.549299, 0.549299, -1.583461, 0.549299, -0.549299, -1.583461, 0.549299, 1, -1, 1, -1, -1, 1, -0.549299, -1.583461, 0.549299, 1, -1, 1, -0.549299, -1.583461, 0.549299, 0.549299, -1.583461, 0.549299, -1, -1, 1, -1, -1, -1, -0.549299, -1.583461, -0.549299, -1, -1, 1, -0.549299, -1.583461, -0.549299, -0.549299, -1.583461, 0.549299, 1, -1, -1, 1, -1, 1, 0.549299, -1.583461, 0.549299, 1, -1, -1, 0.549299, -1.583461, 0.549299, 0.549299, -1.583461, -0.549299 };
	vector<float> normals = { 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1 };
	vector<float> test_norms = { 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0.4861, 0.8739, 0, 0.4861, 0.8739, 0, 0.4861, 0.8739, 0, 0.4861, 0.8739, 0, 0.4861, 0.8739, 0, 0.4861, 0.8739, -0.8739, 0.4861, 0, -0.8739, 0.4861, 0, -0.8739, 0.4861, 0, -0.8739, 0.4861, 0, -0.8739, 0.4861, 0, -0.8739, 0.4861, 0, 0, -0.6113, -0.7914, 0, -0.6113, -0.7914, 0, -0.6113, -0.7914, 0, -0.6113, -0.7914, 0, -0.6113, -0.7914, 0, -0.6113, -0.7914, 0.8739, 0.4861, 0, 0.8739, 0.4861, 0, 0.8739, 0.4861, 0, 0.8739, 0.4861, 0, 0.8739, 0.4861, 0, 0.8739, 0.4861, 0, 0, 0.4861, -0.8739, 0, 0.4861, -0.8739, 0, 0.4861, -0.8739, 0, 0.4861, -0.8739, 0, 0.4861, -0.8739, 0, 0.4861, -0.8739, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, -0.3493, -0.937, 0, -0.3493, -0.937, 0, -0.3493, -0.937, 0, -0.3493, -0.937, 0, -0.3493, -0.937, 0, -0.3493, -0.937, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0.9341, 0, -0.3569, 0.9341, 0, -0.3569, 0.9341, 0, -0.3569, 0.9341, 0, -0.3569, 0.9341, 0, -0.3569, 0.9341, 0, -0.3569, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -0.7673, -0.6413, 0, -0.7673, -0.6413, 0, -0.7673, -0.6413, 0, -0.7673, -0.6413, 0, -0.7673, -0.6413, 0, -0.7673, -0.6413, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0.4323, -0.9017, 0, 0.4323, -0.9017, 0, 0.4323, -0.9017, 0, 0.4323, -0.9017, 0, 0.4323, -0.9017, 0, 0.4323, -0.9017, 0, -0.6413, 0.7673, 0, -0.6413, 0.7673, 0, -0.6413, 0.7673, 0, -0.6413, 0.7673, 0, -0.6413, 0.7673, 0, -0.6413, 0.7673, 0, -0.6413, -0.7673, 0, -0.6413, -0.7673, 0, -0.6413, -0.7673, 0, -0.6413, -0.7673, 0, -0.6413, -0.7673, 0, -0.6413, -0.7673, 0.7673, -0.6413, 0, 0.7673, -0.6413, 0, 0.7673, -0.6413, 0, 0.7673, -0.6413, 0, 0.7673, -0.6413, 0, 0.7673, -0.6413, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.9017, 0.4323, 0, 0.9017, 0.4323, 0, 0.9017, 0.4323, 0, 0.9017, 0.4323, 0, 0.9017, 0.4323, 0, 0.9017, 0.4323, 0, -0.9017, 0.4323, 0, -0.9017, 0.4323, 0, -0.9017, 0.4323, 0, -0.9017, 0.4323, 0, -0.9017, 0.4323, 0, -0.9017, 0.4323, 0, 0, 0.4323, 0.9017, 0, 0.4323, 0.9017, 0, 0.4323, 0.9017, 0, 0.4323, 0.9017, 0, 0.4323, 0.9017, 0, 0.4323, 0.9017, 0, 0.9278, 0.3731, 0, 0.9278, 0.3731, 0, 0.9278, 0.3731, 0, 0.9278, 0.3731, 0, 0.9278, 0.3731, 0, 0.9278, 0.3731, 0, 0.8668, -0.4987, 0, 0.8668, -0.4987, 0, 0.8668, -0.4987, 0, 0.8668, -0.4987, 0, 0.8668, -0.4987, 0, 0.8668, -0.4987, 0, -0.8668, -0.4987, 0, -0.8668, -0.4987, 0, -0.8668, -0.4987, 0, -0.8668, -0.4987, 0, -0.8668, -0.4987, 0, -0.8668, -0.4987, -0.9341, 0, -0.3569, -0.9341, 0, -0.3569, -0.9341, 0, -0.3569, -0.9341, 0, -0.3569, -0.9341, 0, -0.3569, -0.9341, 0, -0.3569, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -0.9278, 0.3731, 0, -0.9278, 0.3731, 0, -0.9278, 0.3731, 0, -0.9278, 0.3731, 0, -0.9278, 0.3731, 0, -0.9278, 0.3731, -0.9661, 0, 0.2581, -0.9661, 0, 0.2581, -0.9661, 0, 0.2581, -0.9661, 0, 0.2581, -0.9661, 0, 0.2581, -0.9661, 0, 0.2581, 0.9661, 0, 0.2581, 0.9661, 0, 0.2581, 0.9661, 0, 0.2581, 0.9661, 0, 0.2581, 0.9661, 0, 0.2581, 0.9661, 0, 0.2581, 0.1038, 0, 0.9946, 0.1038, 0, 0.9946, 0.1038, 0, 0.9946, 0.1038, 0, 0.9946, 0.1038, 0, 0.9946, 0.1038, 0, 0.9946, -0.2404, 0, -0.9707, -0.2404, 0, -0.9707, -0.2404, 0, -0.9707, -0.2404, 0, -0.9707, -0.2404, 0, -0.9707, -0.2404, 0, -0.9707, -0.2404, 0, 0.9707, -0.2404, 0, 0.9707, -0.2404, 0, 0.9707, -0.2404, 0, 0.9707, -0.2404, 0, 0.9707, -0.2404, 0, 0.9707, -0.3493, 0.937, 0, -0.3493, 0.937, 0, -0.3493, 0.937, 0, -0.3493, 0.937, 0, -0.3493, 0.937, 0, -0.3493, 0.937, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0.1552, 0.9879, 0, 0.1552, 0.9879, 0, 0.1552, 0.9879, 0, 0.1552, 0.9879, 0, 0.1552, 0.9879, 0, 0.1552, 0.9879, 0, 0.1552, -0.9879, 0, 0.1552, -0.9879, 0, 0.1552, -0.9879, 0, 0.1552, -0.9879, 0, 0.1552, -0.9879, 0, 0.1552, -0.9879, 0, 0.1038, 0, -0.9946, 0.1038, 0, -0.9946, 0.1038, 0, -0.9946, 0.1038, 0, -0.9946, 0.1038, 0, -0.9946, 0.1038, 0, -0.9946, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -0.6113, 0.7914, 0, -0.6113, 0.7914, 0, -0.6113, 0.7914, 0, -0.6113, 0.7914, 0, -0.6113, 0.7914, 0, -0.6113, 0.7914, -0.7914, -0.6113, 0, -0.7914, -0.6113, 0, -0.7914, -0.6113, 0, -0.7914, -0.6113, 0, -0.7914, -0.6113, 0, -0.7914, -0.6113, 0, 0.7914, -0.6113, 0, 0.7914, -0.6113, 0, 0.7914, -0.6113, 0, 0.7914, -0.6113, 0, 0.7914, -0.6113, 0, 0.7914, -0.6113, 0 };
	vector<float> uvCoords = {};
	vector<float> uv_test = {};

	time_t t = time(NULL);

	Mesh m(test_pos, test_norms, uvCoords);
	Mesh m2(positions, normals, uvCoords);
	Transform tf;
	tf.xScale = 50;
	tf.yScale = 50;
	tf.zScale = 50;
	tf.xPos = 300;
	tf.yPos = 300;
	tf.zPos = 0;

	Transform tf2;
	tf2.xScale = 30;
	tf2.yScale = 30;
	tf2.zScale = 30;
	tf2.xPos = 100;
	tf2.yPos = 300;
	tf2.zPos = 0;

	int frames = 0;
	int tframe = 0;
	int cfps = 0;
	Renderer3D render;
	priority_queue<Triangle> tris;

	render.StartMTRenderer();
	while (true) {
		tf.yRot -= 1;
		tf.xRot -= 1;
		tf2.zRot++;
		tf2.xRot++;
		bitmap_image img("dvd.bmp");
		float tst[] = { 0,0 };
		Texture_Setup(&img, tst);

		ProjectMesh(m, tf, tris, FragShader_BS);
		ProjectMesh(m2, tf2, tris, FragShader_Text, tst);
		Rasterizer_MT(render, tris);

		render.displayImage(854, 480);
		render.deleteImage();

		string s = " " + std::to_string(cfps) + " FPS" + " Frames rendered: " + std::to_string(frames++);
		tframe++;
		wstring r = std::wstring(s.begin(), s.end());
		LPCWSTR wideString = r.c_str();
		SetConsoleTitle(wideString);

		time_t c = time(NULL) - t;
		if (c >= 1) {
			t = time(NULL);
			cfps = tframe;
			tframe = 0;
		}


	}

	render.StopMTRenderer();
}
int main() {

	Rasterize_ST();

	return 0;
}